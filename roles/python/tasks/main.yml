
- import_tasks: mac.yml
  when: ansible_os_family == "Darwin"

- import_tasks: ubuntu.yml
  when: ansible_os_family == "Debian"

- name: Check if pytest.ini file exists
  stat: path="{{dotfiles_user_home}}/pytest.ini"
  register: pytest_stat

- name: Back up pytest.ini file
  command: mv ~/pytest.ini ~/pytest.ini.bak
  args:
    creates: "{{dotfiles_user_home}}/pytest.ini"
  when: pytest_stat.stat.exists

- name: Link pytest.ini file
  file:
    src: "{{dotfiles_home}}/roles/python/files/pytest.ini"
    dest: "{{dotfiles_user_home}}/pytest.ini"
    state: link

- name: Install pipx
  tags: pipx
  shell: "PYENV_VERSION=system python3 -m pip install --user pipx && PYENV_VERSION=system python3 -m pipx install pipx"
  args:
    creates: "{{dotfiles_user_home}}/.local/bin/pipx"

- name: Download poetry install file
  get_url:
    url: https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
    dest: /tmp/get_poetry.py
    mode: u+rwx
    checksum: sha256:{{ python_poetry_install_checksum }}

- name: Install poetry
  tags: poetry
  shell: "python /tmp/get_poetry.py"
  args:
    creates: "{{dotfiles_user_home}}/.poetry/bin/poetry"

- name: Remove poetry install file
  file:
    path: /tmp/get_poetry.py
    state: absent

# A global `virtualenv` command is needed for prezto's pyenv-virtualenv to work
- name: Install virtualenv
  shell: "PYENV_VERSION=system python3 -m pip install virtualenv"
  args:
    creates: "/usr/local/bin/virtualenv"
